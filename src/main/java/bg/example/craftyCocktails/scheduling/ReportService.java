package bg.example.craftyCocktails.scheduling;

import bg.example.craftyCocktails.model.entity.enums.SpiritNameEnum;
import bg.example.craftyCocktails.service.CocktailService;
import bg.example.craftyCocktails.service.EmailService;
import bg.example.craftyCocktails.service.UserService;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneOffset;
import java.util.List;
import org.springframework.stereotype.Service;

@Service
public class ReportService {

  private static final String REPORT_TITLE = "This is autogenerated message from your application.";
  private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(
      ReportService.class);
  private final CocktailService cocktailService;
  private final EmailService emailService;
  private final UserService userService;

  public ReportService(
      CocktailService cocktailService,
      EmailService emailService,
      UserService userService
  ) {
    this.cocktailService = cocktailService;
    this.emailService = emailService;
    this.userService = userService;
  }

  public void generateDailyReport() {
    LocalDate today = LocalDate.now();
    Instant todayMidnight = today.atStartOfDay(ZoneOffset.UTC).toInstant();

    log.info("Start generating report");

    String result = String.format("""
            Report on date: %s
                Whiskey cocktails: %d
                Tequila cocktails: %d
                Gin cocktails: %d
                Rum cocktails: %d
                Vodka cocktails: %d
                Brandy cocktails: %d
                Non-alcoholic cocktails: %d
                Cocktails all: %d
            """, todayMidnight,
        cocktailService.findCountBySpirit(SpiritNameEnum.WHISKEY),
        cocktailService.findCountBySpirit(SpiritNameEnum.TEQUILA),
        cocktailService.findCountBySpirit(SpiritNameEnum.GIN),
        cocktailService.findCountBySpirit(SpiritNameEnum.RUM),
        cocktailService.findCountBySpirit(SpiritNameEnum.VODKA),
        cocktailService.findCountBySpirit(SpiritNameEnum.BRANDY),
        cocktailService.findCountBySpirit(SpiritNameEnum.NONE),
        cocktailService.findCountAll()
    );
    List<String> adminsEmails = this.userService.getAdminsEmails();
    for (String email : adminsEmails) {
      log.info(String.format("Report is sent to %s", email));
      emailService.sendSimpleMessage(email, REPORT_TITLE, result);
    }
  }
}
